/**
 * @license bippy
 *
 * Copyright (c) Aiden Bai, Million Software, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// src/install-hook-script-string.ts
var INSTALL_HOOK_SCRIPT_STRING = "(()=>{try{var t=()=>{};const n=new Map;let o=0;globalThis.__REACT_DEVTOOLS_GLOBAL_HOOK__={checkDCE:t,supportsFiber:!0,supportsFlight:!0,hasUnsupportedRendererAttached:!1,renderers:n,onCommitFiberRoot:t,onCommitFiberUnmount:t,onPostCommitFiberRoot:t,inject(t){var e=++o;return n.set(e,t),globalThis.__REACT_DEVTOOLS_GLOBAL_HOOK__._instrumentationIsActive=!0,e},_instrumentationIsActive:!1,_script:!0}}catch{}})()";

// src/sw.ts
self.addEventListener("install", () => self.skipWaiting());
self.addEventListener(
  "activate",
  (event) => event.waitUntil(self.clients.claim())
);
self.addEventListener("fetch", (event) => {
  const url = event.request.url;
  if (!url.endsWith(".js")) {
    event.respondWith(fetch(event.request));
    return;
  }
  event.respondWith(
    fetch(event.request.clone(), {
      mode: "cors",
      credentials: "omit",
      headers: { Accept: "*/*" }
    }).then(async (response) => {
      if (!response?.ok || response.type === "opaque") {
        return fetch(event.request);
      }
      try {
        const text = await response.clone().text();
        const modifiedText = `${INSTALL_HOOK_SCRIPT_STRING}
${text}`;
        const headers = new Headers(response.headers);
        headers.set("Content-Type", "application/javascript");
        headers.set(
          "Content-Length",
          new TextEncoder().encode(modifiedText).length.toString()
        );
        return new Response(modifiedText, {
          status: response.status,
          statusText: response.statusText,
          headers
        });
      } catch {
        return fetch(event.request);
      }
    }).catch(() => fetch(event.request))
  );
});
